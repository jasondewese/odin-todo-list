(()=>{"use strict";var e={917:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const s=i},426:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"html {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #0f172a;\n}\n\nimg {\n    filter: invert(8%) sepia(7%) saturate(5326%) hue-rotate(183deg) brightness(96%) contrast(96%);\n}\n\n/*Grid Layout*/\n.content {\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template: 8rem 1fr 3rem / max(20%,250px) 80%;\n}\n\n.header {\n    background-color: #94a3b8;\n    grid-area: 1 / 1 / 2 / 3;\n    box-shadow: 0 5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n}\n\n.nav {\n    background-color: #dbeafe;\n    grid-area: 2 / 1 / 3 / 2;\n}\n\n.main {\n    background-color: #fafafa;\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.footer {\n    background-color: #94a3b8;\n    grid-area: 3 / 1 / 4 / 3;\n    box-shadow: 0 -5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n    font-weight: 500;\n}\n\n\n/*End Grid Layout*/\n\n/*Header Styling*/\n.header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.title-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 400px;\n    height: 3rem;\n    font-size: 3rem;\n    font-weight: 500;\n}\n\n.title-wrapper img {\n    width: 75px;\n}\n/*End Header Styling*/\n\n/*Nav Styling*/\n.nav {\n    display: grid;\n    grid-template-rows: 150px 1fr;\n    gap: 30px;\n    padding: 2rem;\n}\n\n.list-wrapper>ul li, .projects-wrapper>ul li{\n    display: flex;\n    gap: 1rem;\n    padding: 1rem;\n    align-items: center;\n}\n\n\n.projects-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.projects-wrapper>div {\n    display: flex;\n    padding: 1rem;\n    gap: 1rem;\n    align-items: center;\n    margin-bottom: -1rem;\n}\n\n.projects-label {\n    font-size: 2rem;\n}\n\n/*End Nav Styling*/\n\n/*Main Styling*/\n.main {\n    padding: 3rem 0 2rem max(15%, 50px);\n}\n\n.main-content {\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.main-content div, .main-content ul {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\nli {\n    list-style: none;\n}\n\n.task-list {\n    \n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.task-list li {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n#new-task-wrapper {\n    display: flex;\n    justify-content: flex-start;\n}\n\n#new-task-wrapper:hover {\n    cursor: pointer;\n}\n\n.new-task-label {\n    padding-left: 50px;\n}\n\n.task-name {\n    text-align: left;\n    padding-left: 50px;\n}\n\n.date {\n    padding-right: 50px;\n}\n\n.current-project-name {\n    font-size: 2rem;\n}\n\n.task-wrapper:hover, .new-task-wrapper:hover, .check-lists-item:hover, .project-wrapper:hover, .new-project-wrapper:hover {\n    background-color:#cbd5e1;\n}\n\n.task-wrapper {\n    height: 1.5rem;\n}\n\n.list-icon:hover, .project-name:hover, .new-project-wrapper:hover, .check-lists-item:hover, button:hover, .date {\n    cursor: pointer;\n}\n/*End Main Styling*/\n\n/*Footer Styling*/\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.git-logo {\n    width: 2rem;\n}\n/*End footer Styling*/\n\n/*New Todo form style*/\n.task-form, .project-form {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 10px;\n    height: 5rem;\n    width: 100%;\n}\n\n.task-input, .project-input {\n    grid-area: 1 / 1 / 2 / 3;\n}\n\n.add-button {\n    background-color: #bbf7d0;\n    grid-area: 2 / 1 / 3 / 2;    \n}\n\n.cancel-button {\n    background-color: #fecaca;\n    grid-area: 2 / 2 / 3 / 3;    \n}\n\n.add-button, .cancel-button {\n    font-weight: 600;\n}\n\n.add-button, .cancel-button, .task-input, .project-input {\n    border: 1px solid #d4d4d4;\n    border-radius: 5px;\n}\n/*End todo form style*/","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;IACjC,sBAAsB;IACtB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,6FAA6F;AACjG;;AAEA,cAAc;AACd;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,iDAAiD;AACrD;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,qCAAqC;IACrC,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,sCAAsC;IACtC,UAAU;IACV,gBAAgB;AACpB;;;AAGA,kBAAkB;;AAElB,iBAAiB;AACjB;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;AACA,qBAAqB;;AAErB,cAAc;AACd;IACI,aAAa;IACb,6BAA6B;IAC7B,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,eAAe;AACnB;;AAEA,kBAAkB;;AAElB,eAAe;AACf;IACI,mCAAmC;AACvC;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;AACA,mBAAmB;;AAEnB,iBAAiB;AACjB;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;AACf;AACA,qBAAqB;;AAErB,sBAAsB;AACtB;IACI,aAAa;IACb,gCAAgC;IAChC,SAAS;IACT,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;AACtB;AACA,sBAAsB",sourcesContent:["html {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #0f172a;\n}\n\nimg {\n    filter: invert(8%) sepia(7%) saturate(5326%) hue-rotate(183deg) brightness(96%) contrast(96%);\n}\n\n/*Grid Layout*/\n.content {\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template: 8rem 1fr 3rem / max(20%,250px) 80%;\n}\n\n.header {\n    background-color: #94a3b8;\n    grid-area: 1 / 1 / 2 / 3;\n    box-shadow: 0 5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n}\n\n.nav {\n    background-color: #dbeafe;\n    grid-area: 2 / 1 / 3 / 2;\n}\n\n.main {\n    background-color: #fafafa;\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.footer {\n    background-color: #94a3b8;\n    grid-area: 3 / 1 / 4 / 3;\n    box-shadow: 0 -5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n    font-weight: 500;\n}\n\n\n/*End Grid Layout*/\n\n/*Header Styling*/\n.header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.title-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 400px;\n    height: 3rem;\n    font-size: 3rem;\n    font-weight: 500;\n}\n\n.title-wrapper img {\n    width: 75px;\n}\n/*End Header Styling*/\n\n/*Nav Styling*/\n.nav {\n    display: grid;\n    grid-template-rows: 150px 1fr;\n    gap: 30px;\n    padding: 2rem;\n}\n\n.list-wrapper>ul li, .projects-wrapper>ul li{\n    display: flex;\n    gap: 1rem;\n    padding: 1rem;\n    align-items: center;\n}\n\n\n.projects-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.projects-wrapper>div {\n    display: flex;\n    padding: 1rem;\n    gap: 1rem;\n    align-items: center;\n    margin-bottom: -1rem;\n}\n\n.projects-label {\n    font-size: 2rem;\n}\n\n/*End Nav Styling*/\n\n/*Main Styling*/\n.main {\n    padding: 3rem 0 2rem max(15%, 50px);\n}\n\n.main-content {\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.main-content div, .main-content ul {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\nli {\n    list-style: none;\n}\n\n.task-list {\n    \n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.task-list li {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n#new-task-wrapper {\n    display: flex;\n    justify-content: flex-start;\n}\n\n#new-task-wrapper:hover {\n    cursor: pointer;\n}\n\n.new-task-label {\n    padding-left: 50px;\n}\n\n.task-name {\n    text-align: left;\n    padding-left: 50px;\n}\n\n.date {\n    padding-right: 50px;\n}\n\n.current-project-name {\n    font-size: 2rem;\n}\n\n.task-wrapper:hover, .new-task-wrapper:hover, .check-lists-item:hover, .project-wrapper:hover, .new-project-wrapper:hover {\n    background-color:#cbd5e1;\n}\n\n.task-wrapper {\n    height: 1.5rem;\n}\n\n.list-icon:hover, .project-name:hover, .new-project-wrapper:hover, .check-lists-item:hover, button:hover, .date {\n    cursor: pointer;\n}\n/*End Main Styling*/\n\n/*Footer Styling*/\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.git-logo {\n    width: 2rem;\n}\n/*End footer Styling*/\n\n/*New Todo form style*/\n.task-form, .project-form {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 10px;\n    height: 5rem;\n    width: 100%;\n}\n\n.task-input, .project-input {\n    grid-area: 1 / 1 / 2 / 3;\n}\n\n.add-button {\n    background-color: #bbf7d0;\n    grid-area: 2 / 1 / 3 / 2;    \n}\n\n.cancel-button {\n    background-color: #fecaca;\n    grid-area: 2 / 2 / 3 / 3;    \n}\n\n.add-button, .cancel-button {\n    font-weight: 600;\n}\n\n.add-button, .cancel-button, .task-input, .project-input {\n    border: 1px solid #d4d4d4;\n    border-radius: 5px;\n}\n/*End todo form style*/"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],A=r.base?c[0]+r.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var c=r(e,o),A=0;A<a.length;A++){var l=t(a[A]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),A=t(216),l=t.n(A),d=t(589),p=t.n(d),u=t(917),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var g=t(426),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),n()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;const f=(()=>{let e=[],n=0;return{getProjectList:()=>e,addProject:n=>{e.push(n)},removeProject:n=>{e.splice(n,1)},getProject:n=>e[n],getCurrentProject:()=>n,setCurrentProject:e=>{n=e},getProjectListLength:()=>e.length}})(),h=e=>{let n=e,t=[];return{getName:()=>n,setName:e=>{n=e},addTodo:e=>{t.push(e)},removeTodo:e=>{t.splice(e,1)},getLength:()=>t.length,getTodo:e=>t[e],getTodoList:()=>t}},b=(()=>{const e=()=>{document.querySelector(".project-form").remove()};return{openProjectForm:()=>{const n=(()=>{const n=document.createElement("form");n.classList.add("project-form");const t=document.createElement("input");t.type="text",t.classList.add("project-input");const r=document.createElement("button");r.textContent="Add",r.type="button",r.classList.add("add-button"),r.addEventListener("click",(function(){const n=h(document.querySelector(".project-input").value),t=x.makeProject(n);document.querySelector(".projects-list").appendChild(t),f.addProject(n),I.saveLibrary(),e()}));const o=document.createElement("button");return o.type="button",o.textContent="Cancel",o.classList.add("cancel-button"),o.addEventListener("click",e),n.appendChild(t),n.appendChild(r),n.appendChild(o),n})();return document.querySelector(".projects-list").appendChild(n),n},closeProjectForm:e}})(),y=e=>{let n=e,t="",r=!1;return{getTask:()=>n,setTask:e=>{n=e},setDueDate:e=>{t=e},getDueDate:()=>t,isComplete:()=>r,changeComplete:()=>{r=!r},setComplete:e=>{r=e}}},B=(()=>{const e=()=>{document.querySelector(".task-form").remove()};return{openTodoForm:()=>{const n=(()=>{const n=document.createElement("form");n.classList.add("task-form");const t=document.createElement("input");t.type="text",t.classList.add("task-input");const r=document.createElement("button");r.textContent="Add",r.type="button",r.classList.add("add-button"),r.addEventListener("click",(function(){const e=y(document.querySelector(".task-input").value),n=f.getCurrentProject(),t=f.getProject(n);t.addTodo(e),I.saveLibrary(),k.displayTodoList(t)}));const o=document.createElement("button");return o.type="button",o.textContent="Cancel",o.classList.add("cancel-button"),o.addEventListener("click",e),n.appendChild(t),n.appendChild(r),n.appendChild(o),n})();return document.querySelector(".task-list").appendChild(n),n},closeTodoForm:e}})(),v=(()=>{const e=()=>{document.querySelector(".new-project-wrapper").addEventListener("click",(function(){b.openProjectForm()})),document.querySelector(".new-task-wrapper").addEventListener("click",(function(){B.openTodoForm()}))};return{listenerSetup:e,defaultProjectSetup:()=>{const e=h("General Tasks");f.addProject(e),k.displayProjectList(),k.displayTodoList(e)},runTodoApp:()=>{I.loadLibrary(),e()}}})(),I={saveLibrary:()=>{let e=[];if(function(e){var n;try{n=window.localStorage;var t="__storage_test__";return n.setItem(t,t),n.removeItem(t),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&n&&0!==n.length}}()){for(let n=0;n<f.getProjectListLength();n++){let t=[],r=f.getProject(n);for(let e=0;e<r.getLength();e++){let n=r.getTodo(e),o={_task:n.getTask(),_dueDate:n.getDueDate(),_complete:n.isComplete()};t.push(o)}let o={_name:r.getName(),_todoList:t};e.push(o)}localStorage.setItem("projectList",JSON.stringify(e)),console.log(JSON.parse(localStorage.getItem("projectList")||"[]"))}else console.log("localStorage not available")},loadLibrary:()=>{if(localStorage.getItem("projectList")){let e=JSON.parse(localStorage.getItem("projectList")||"[]");for(let n=0;n<e.length;n++){let t=h(e[n]._name);for(let r=0;r<e[n]._todoList.length;r++){let o=y(e[n]._todoList[r]._task),a=new Date(e[n]._todoList[r]._dueDate);""===a||null===a?o.setDueDate("No due date"):o.setDueDate(a),console.log(o.getDueDate()),o.setComplete(e[n]._todoList[r]._complete),t.addTodo(o)}f.addProject(t)}k.displayAllData()}else v.defaultProjectSetup()}},x={makeProject:e=>{const n=document.createElement("li");n.classList.add("project-wrapper");const t=document.createElement("img");t.src="../src/images/format-list-checks.svg",t.alt="Check list icon",t.classList.add("list-icon");const r=document.createElement("div");r.classList.add("project-name"),r.textContent=e.getName();const o=document.createElement("img");return o.src="../src/images/delete.svg",o.alt="Trash can delete logo",o.classList.add("list-icon"),o.classList.add("delete-icon"),r.addEventListener("click",(function(){k.displayProject(e);const n=this.parentElement.parentElement,t=Array.from(n.childNodes).indexOf(this.parentElement);f.setCurrentProject(t)})),t.addEventListener("click",(function(){k.displayProject(e);const n=this.parentElement.parentElement,t=Array.from(n.childNodes).indexOf(this.parentElement);f.setCurrentProject(t)})),o.addEventListener("click",(function(){const e=this.parentElement.parentElement,n=Array.from(e.childNodes).indexOf(this.parentElement);f.removeProject(n),I.saveLibrary(),k.displayProjectList()})),n.appendChild(t),n.appendChild(r),n.appendChild(o),n}},k=(()=>{const e=e=>{const n=document.querySelector(".task-list");for(;n.firstChild;)n.removeChild(n.firstChild);document.querySelector(".current-project-name").textContent=e.getName();for(let n=0;n<e.getLength();n++){let t=e.getTodo(n),r=E.makeTodo(t);document.querySelector(".task-list").appendChild(r)}},n=()=>{const e=document.querySelector(".projects-list");for(;e.firstChild;)e.removeChild(e.firstChild);for(let e=0;e<f.getProjectListLength();e++){let n=f.getProject(e),t=x.makeProject(n);document.querySelector(".projects-list").appendChild(t)}};return{displayProject:e,displayProjectList:n,displayTodoList:e=>{const n=document.querySelector(".task-list");for(;n.firstChild;)n.removeChild(n.firstChild);if(document.querySelector(".current-project-name").textContent=e.getName(),e.getLength()>0)for(let t=0;t<e.getLength();t++){let r=e.getTodo(t),o=E.makeTodo(r);n.appendChild(o)}},displayAllData:()=>{n(),e(f.getProject(0))}}})(),w=(e,n)=>{const t=document.createElement("input");t.type="date",t.style.position="fixed",t.style.top=e.clientY+"px",t.style.left=e.clientX+"px",t.style.zIndex=5,t.classList.add("date-input"),t.addEventListener("change",(function(){const e=this.value,t=new Date(e);n.setDueDate(t),k.displayTodoList(f.getProject(f.getCurrentProject())),document.querySelector(".date-input").remove()})),document.querySelector("body").appendChild(t)},E={makeTodo:e=>{const n=document.createElement("li");n.classList.add("task-wrapper");const t=document.createElement("div");t.classList.add("task-left");const r=document.createElement("img");r.src="../src/images/checkbox-blank-outline.svg",r.alt="Empty check box",r.classList.add("list-icon","checkbox");const o=document.createElement("div");o.classList.add("task-name"),o.textContent=e.getTask(),e.isComplete()?(n.style.textDecoration="line-through",r.src="../src/images/checkbox-marked-outline.svg",r.alt="Checked check box"):(n.style.textDecoration="none",r.src="../src/images/checkbox-blank-outline.svg",r.alt="Empty check box"),r.addEventListener("click",(function(){e.changeComplete(),I.saveLibrary(),e.isComplete()?(n.style.textDecoration="line-through",r.src="../src/images/checkbox-marked-outline.svg",r.alt="Checked check box"):(n.style.textDecoration="none",r.src="../src/images/checkbox-blank-outline.svg",r.alt="Empty check box")})),t.appendChild(r),t.appendChild(o);const a=document.createElement("div");a.classList.add("task-right");const i=document.createElement("div");if(i.classList.add("date"),""!=e.getDueDate()&&null!=e.getDueDate()&&"No due date"!=e.getDueDate()){let n=e.getDueDate().getUTCDate(),t=e.getDueDate().getMonth(),r=e.getDueDate().getFullYear();1===n&&t++,i.textContent=`${t+1} / ${n} / ${r}`}else i.textContent="No due date";const s=document.createElement("img");return s.src="../src/images/delete.svg",s.alt="Trash can delete icon",s.classList.add("list-icon"),i.addEventListener("click",(function(n){w(n,e),I.saveLibrary()})),s.addEventListener("click",(function(){const e=this.parentElement.parentElement.parentElement,n=this.parentElement.parentElement,t=Array.from(e.childNodes).indexOf(n),r=f.getCurrentProject(),o=f.getProject(r);o.removeTodo(t),I.saveLibrary(),k.displayTodoList(o)})),a.appendChild(i),a.appendChild(s),n.appendChild(t),n.appendChild(a),n}};v.runTodoApp()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,