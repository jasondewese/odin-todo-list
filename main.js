(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const A=i},426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"html {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #0f172a;\n}\n\nimg {\n    filter: invert(8%) sepia(7%) saturate(5326%) hue-rotate(183deg) brightness(96%) contrast(96%);\n}\n\n/*Grid Layout*/\n.content {\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template: 8rem 1fr 3rem / max(20%,250px) 80%;\n}\n\n.header {\n    background-color: #94a3b8;\n    grid-area: 1 / 1 / 2 / 3;\n    box-shadow: 0 5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n}\n\n.nav {\n    background-color: #dbeafe;\n    grid-area: 2 / 1 / 3 / 2;\n}\n\n.main {\n    background-color: #fafafa;\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.footer {\n    background-color: #94a3b8;\n    grid-area: 3 / 1 / 4 / 3;\n    box-shadow: 0 -5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n    font-weight: 500;\n}\n\n\n/*End Grid Layout*/\n\n/*Header Styling*/\n.header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.title-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 400px;\n    height: 3rem;\n    font-size: 3rem;\n    font-weight: 500;\n}\n\n.title-wrapper img {\n    width: 75px;\n}\n/*End Header Styling*/\n\n/*Nav Styling*/\n.nav {\n    display: grid;\n    grid-template-rows: 150px 1fr;\n    gap: 30px;\n    padding: 2rem;\n}\n\n.list-wrapper>ul li, .projects-wrapper>ul li{\n    display: flex;\n    gap: 1rem;\n    padding: 1rem;\n    align-items: center;\n}\n\n\n.projects-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.projects-wrapper>div {\n    display: flex;\n    padding: 1rem;\n    gap: 1rem;\n    align-items: center;\n    margin-bottom: -1rem;\n}\n\n.projects-label {\n    font-size: 2rem;\n}\n\n/*End Nav Styling*/\n\n/*Main Styling*/\n.main {\n    padding: 3rem 0 2rem max(15%, 50px);\n}\n\n.main-content {\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.main-content div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n#new-task-wrapper {\n    display: flex;\n    justify-content: flex-start;\n}\n\n.new-task-label {\n    padding-left: 50px;\n}\n\n.task-name {\n    text-align: left;\n    padding-left: 50px;\n}\n\n.date {\n    padding-right: 50px;\n}\n\n.current-project-name {\n    font-size: 2rem;\n}\n\n.task-wrapper:hover, .new-task-wrapper:hover, .check-lists-item:hover, .project-wrapper:hover, .new-project-wrapper:hover {\n    background-color:#cbd5e1;\n}\n\n.task-wrapper {\n    height: 1.5rem;\n}\n\n.list-icon:hover, .project-name:hover, .new-project-wrapper:hover, .check-lists-item:hover, button:hover {\n    cursor: pointer;\n}\n/*End Main Styling*/\n\n/*Footer Styling*/\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.git-logo {\n    width: 2rem;\n}\n/*End footer Styling*/\n\n/*New Todo form style*/\n.task-form, .project-form {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 10px;\n    height: 5rem;\n    width: 100%;\n}\n\n.task-input, .project-input {\n    grid-area: 1 / 1 / 2 / 3;\n}\n\n.add-button {\n    background-color: #bbf7d0;\n    grid-area: 2 / 1 / 3 / 2;    \n}\n\n.cancel-button {\n    background-color: #fecaca;\n    grid-area: 2 / 2 / 3 / 3;    \n}\n\n.add-button, .cancel-button {\n    font-weight: 600;\n}\n\n.add-button, .cancel-button, .task-input, .project-input {\n    border: 1px solid #d4d4d4;\n    border-radius: 5px;\n}\n/*End todo form style*/","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;IACjC,sBAAsB;IACtB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,6FAA6F;AACjG;;AAEA,cAAc;AACd;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,iDAAiD;AACrD;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,qCAAqC;IACrC,UAAU;AACd;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,sCAAsC;IACtC,UAAU;IACV,gBAAgB;AACpB;;;AAGA,kBAAkB;;AAElB,iBAAiB;AACjB;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;AACA,qBAAqB;;AAErB,cAAc;AACd;IACI,aAAa;IACb,6BAA6B;IAC7B,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,eAAe;AACnB;;AAEA,kBAAkB;;AAElB,eAAe;AACf;IACI,mCAAmC;AACvC;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;AACA,mBAAmB;;AAEnB,iBAAiB;AACjB;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;AACf;AACA,qBAAqB;;AAErB,sBAAsB;AACtB;IACI,aAAa;IACb,gCAAgC;IAChC,SAAS;IACT,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;AACtB;AACA,sBAAsB",sourcesContent:["html {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #0f172a;\n}\n\nimg {\n    filter: invert(8%) sepia(7%) saturate(5326%) hue-rotate(183deg) brightness(96%) contrast(96%);\n}\n\n/*Grid Layout*/\n.content {\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template: 8rem 1fr 3rem / max(20%,250px) 80%;\n}\n\n.header {\n    background-color: #94a3b8;\n    grid-area: 1 / 1 / 2 / 3;\n    box-shadow: 0 5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n}\n\n.nav {\n    background-color: #dbeafe;\n    grid-area: 2 / 1 / 3 / 2;\n}\n\n.main {\n    background-color: #fafafa;\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.footer {\n    background-color: #94a3b8;\n    grid-area: 3 / 1 / 4 / 3;\n    box-shadow: 0 -5px 5px rgba(0,0,0,0.2);\n    z-index: 1;\n    font-weight: 500;\n}\n\n\n/*End Grid Layout*/\n\n/*Header Styling*/\n.header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.title-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 400px;\n    height: 3rem;\n    font-size: 3rem;\n    font-weight: 500;\n}\n\n.title-wrapper img {\n    width: 75px;\n}\n/*End Header Styling*/\n\n/*Nav Styling*/\n.nav {\n    display: grid;\n    grid-template-rows: 150px 1fr;\n    gap: 30px;\n    padding: 2rem;\n}\n\n.list-wrapper>ul li, .projects-wrapper>ul li{\n    display: flex;\n    gap: 1rem;\n    padding: 1rem;\n    align-items: center;\n}\n\n\n.projects-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.projects-wrapper>div {\n    display: flex;\n    padding: 1rem;\n    gap: 1rem;\n    align-items: center;\n    margin-bottom: -1rem;\n}\n\n.projects-label {\n    font-size: 2rem;\n}\n\n/*End Nav Styling*/\n\n/*Main Styling*/\n.main {\n    padding: 3rem 0 2rem max(15%, 50px);\n}\n\n.main-content {\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.main-content div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n#new-task-wrapper {\n    display: flex;\n    justify-content: flex-start;\n}\n\n.new-task-label {\n    padding-left: 50px;\n}\n\n.task-name {\n    text-align: left;\n    padding-left: 50px;\n}\n\n.date {\n    padding-right: 50px;\n}\n\n.current-project-name {\n    font-size: 2rem;\n}\n\n.task-wrapper:hover, .new-task-wrapper:hover, .check-lists-item:hover, .project-wrapper:hover, .new-project-wrapper:hover {\n    background-color:#cbd5e1;\n}\n\n.task-wrapper {\n    height: 1.5rem;\n}\n\n.list-icon:hover, .project-name:hover, .new-project-wrapper:hover, .check-lists-item:hover, button:hover {\n    cursor: pointer;\n}\n/*End Main Styling*/\n\n/*Footer Styling*/\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.git-logo {\n    width: 2rem;\n}\n/*End footer Styling*/\n\n/*New Todo form style*/\n.task-form, .project-form {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 10px;\n    height: 5rem;\n    width: 100%;\n}\n\n.task-input, .project-input {\n    grid-area: 1 / 1 / 2 / 3;\n}\n\n.add-button {\n    background-color: #bbf7d0;\n    grid-area: 2 / 1 / 3 / 2;    \n}\n\n.cancel-button {\n    background-color: #fecaca;\n    grid-area: 2 / 2 / 3 / 3;    \n}\n\n.add-button, .cancel-button {\n    font-weight: 600;\n}\n\n.add-button, .cancel-button, .task-input, .project-input {\n    border: 1px solid #d4d4d4;\n    border-radius: 5px;\n}\n/*End todo form style*/"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),c=t.n(A),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(917),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var g=t(426),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=d(),e()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;const f=n=>{let e,t=n;return{getTask:()=>t,setTask:n=>{t=n},setDueDate:n=>{e=n},getDueDate:()=>e}},h=n=>{const e=document.createElement("div");e.classList.add("task-wrapper");const t=document.createElement("div");t.classList.add("task-left");const r=document.createElement("img");r.src="../src/images/checkbox-blank-outline.svg",r.alt="Empty check box",r.classList.add("list-icon");const o=document.createElement("div");o.classList.add("task-name"),o.textContent=n.getTask(),t.appendChild(r),t.appendChild(o);const a=document.createElement("div");a.classList.add("task-right");const i=document.createElement("div");i.classList.add("date"),i.textContent="No due date";const A=document.createElement("img");return A.src="../src/images/delete.svg",A.alt="Trash can delete icon",A.classList.add("list-icon"),a.appendChild(i),a.appendChild(A),e.appendChild(t),e.appendChild(a),e},b=(()=>{const n=()=>{document.querySelector(".task-form").remove()};return{openTodoForm:()=>{const e=(()=>{const e=document.createElement("form");e.classList.add("task-form");const t=document.createElement("input");t.type="text",t.classList.add("task-input");const r=document.createElement("button");r.textContent="Add",r.type="button",r.classList.add("add-button"),r.addEventListener("click",(function(){const e=f(document.querySelector(".task-input").value),t=h(e);document.querySelector(".main-content").appendChild(t),n()}));const o=document.createElement("button");return o.type="button",o.textContent="Cancel",o.classList.add("cancel-button"),o.addEventListener("click",n),e.appendChild(t),e.appendChild(r),e.appendChild(o),e})();return document.querySelector(".main-content").appendChild(e),e},closeTodoForm:n}})(),B=n=>{let e=n,t=[];return{getName:()=>e,setName:n=>{e=n},addTodo:n=>{t.push(n)},deleteTodo:n=>{t.splice(n,1)},getLength:()=>t.length,getTodo:n=>t[n]}},y=(()=>{let n=[],e=0;return{addProject:e=>{n.push(e)},removeProject:e=>{n.splice(e,1)},getProject:e=>n[e],getCurrentProject:()=>e,setCurrentProject:n=>{e=n},getProjectListLength:()=>n.length}})(),v=n=>{const e=document.querySelector(".main-content");for(;e.childNodes.length>2;)e.removeChild(e.lastChild);document.querySelector(".current-project-name").textContent=n.getName();for(let e=0;e<n.getLength();e++){let t=n.getTodo(e),r=h(t);document.querySelector(".main-content").appendChild(r)}},I={makeProject:n=>{const e=document.createElement("li");e.classList.add("project-wrapper");const t=document.createElement("img");t.src="../src/images/format-list-checks.svg",t.alt="Check list icon",t.classList.add("list-icon");const r=document.createElement("div");r.classList.add("project-name"),r.textContent=n.getName();const o=document.createElement("img");return o.src="../src/images/delete.svg",o.alt="Trash can delete logo",o.classList.add("list-icon"),r.addEventListener("click",(function(){v(n)})),t.addEventListener("click",(function(){v(n)})),o.addEventListener("click",(function(){})),e.appendChild(t),e.appendChild(r),e.appendChild(o),e}},x=(()=>{const n=()=>{document.querySelector(".project-form").remove()};return{openProjectForm:()=>{const e=(()=>{const e=document.createElement("form");e.classList.add("project-form");const t=document.createElement("input");t.type="text",t.classList.add("project-input");const r=document.createElement("button");r.textContent="Add",r.type="button",r.classList.add("add-button"),r.addEventListener("click",(function(){const e=B(document.querySelector(".project-input").value),t=I.makeProject(e);document.querySelector(".projects-list").appendChild(t),y.addProject(e),n()}));const o=document.createElement("button");return o.type="button",o.textContent="Cancel",o.classList.add("cancel-button"),o.addEventListener("click",n),e.appendChild(t),e.appendChild(r),e.appendChild(o),e})();return document.querySelector(".projects-list").appendChild(e),e},closeProjectForm:n}})(),w=f("laundry"),k=h(w);document.querySelector(".main-content").appendChild(k),b.openTodoForm().firstChild.value="hello";const E=B("Chores");E.addTodo(w);const j=f("dishes");E.addTodo(j),console.log(E.getTodo(0).getTask()),console.log(E.getTodo(1).getTask());const S=I.makeProject(E);document.querySelector(".projects-list").appendChild(S),x.openProjectForm(),y.addProject(E),console.log(y.getProject(0).getName());const T=B("Homework");T.addTodo(f("math")),T.addTodo(f("science")),T.addTodo(f("english")),y.addProject(T),console.log(y.getProject(1).getTodo(2).getTask()),v(T)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,